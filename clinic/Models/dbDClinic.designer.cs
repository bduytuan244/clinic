#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace clinic.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dclinic")]
	public partial class dbDClinicDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertadmin(admin instance);
    partial void Updateadmin(admin instance);
    partial void Deleteadmin(admin instance);
    partial void Insertappointmentform(appointmentform instance);
    partial void Updateappointmentform(appointmentform instance);
    partial void Deleteappointmentform(appointmentform instance);
    partial void Insertclinic_branch(clinic_branch instance);
    partial void Updateclinic_branch(clinic_branch instance);
    partial void Deleteclinic_branch(clinic_branch instance);
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertchat(chat instance);
    partial void Updatechat(chat instance);
    partial void Deletechat(chat instance);
    partial void Insertnotification(notification instance);
    partial void Updatenotification(notification instance);
    partial void Deletenotification(notification instance);
    partial void Insertqa_forum(qa_forum instance);
    partial void Updateqa_forum(qa_forum instance);
    partial void Deleteqa_forum(qa_forum instance);
    partial void Insertservice(service instance);
    partial void Updateservice(service instance);
    partial void Deleteservice(service instance);
    partial void Inserttreatment_result(treatment_result instance);
    partial void Updatetreatment_result(treatment_result instance);
    partial void Deletetreatment_result(treatment_result instance);
    partial void Insertcomment(comment instance);
    partial void Updatecomment(comment instance);
    partial void Deletecomment(comment instance);
    partial void Insertreview(review instance);
    partial void Updatereview(review instance);
    partial void Deletereview(review instance);
    partial void Insertpayment(payment instance);
    partial void Updatepayment(payment instance);
    partial void Deletepayment(payment instance);
    partial void Insertorder(order instance);
    partial void Updateorder(order instance);
    partial void Deleteorder(order instance);
    #endregion
		
		public dbDClinicDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDClinicDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDClinicDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDClinicDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}

        public dbDClinicDataContext() :
              base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dclinicConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<admin> admins
		{
			get
			{
				return this.GetTable<admin>();
			}
		}
		
		public System.Data.Linq.Table<appointmentform> appointmentforms
		{
			get
			{
				return this.GetTable<appointmentform>();
			}
		}
		
		public System.Data.Linq.Table<clinic_branch> clinic_branches
		{
			get
			{
				return this.GetTable<clinic_branch>();
			}
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<chat> chats
		{
			get
			{
				return this.GetTable<chat>();
			}
		}
		
		public System.Data.Linq.Table<notification> notifications
		{
			get
			{
				return this.GetTable<notification>();
			}
		}
		
		public System.Data.Linq.Table<qa_forum> qa_forums
		{
			get
			{
				return this.GetTable<qa_forum>();
			}
		}
		
		public System.Data.Linq.Table<service> services
		{
			get
			{
				return this.GetTable<service>();
			}
		}
		
		public System.Data.Linq.Table<treatment_result> treatment_results
		{
			get
			{
				return this.GetTable<treatment_result>();
			}
		}
		
		public System.Data.Linq.Table<comment> comments
		{
			get
			{
				return this.GetTable<comment>();
			}
		}
		
		public System.Data.Linq.Table<review> reviews
		{
			get
			{
				return this.GetTable<review>();
			}
		}
		
		public System.Data.Linq.Table<payment> payments
		{
			get
			{
				return this.GetTable<payment>();
			}
		}
		
		public System.Data.Linq.Table<order> orders
		{
			get
			{
				return this.GetTable<order>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.admins")]
	public partial class admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _doctor_id;
		
		private string _full_name;
		
		private string _specialization;
		
		private System.Nullable<decimal> _fee;
		
		private string _image_path;
		
		private string _email;
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<bool> _is_active;
		
		private EntitySet<appointmentform> _appointmentforms;
		
		private EntitySet<notification> _notifications;
		
		private EntitySet<qa_forum> _qa_forums;
		
		private EntitySet<review> _reviews;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondoctor_idChanging(int value);
    partial void Ondoctor_idChanged();
    partial void Onfull_nameChanging(string value);
    partial void Onfull_nameChanged();
    partial void OnspecializationChanging(string value);
    partial void OnspecializationChanged();
    partial void OnfeeChanging(System.Nullable<decimal> value);
    partial void OnfeeChanged();
    partial void Onimage_pathChanging(string value);
    partial void Onimage_pathChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onis_activeChanging(System.Nullable<bool> value);
    partial void Onis_activeChanged();
    #endregion
		
		public admin()
		{
			this._appointmentforms = new EntitySet<appointmentform>(new Action<appointmentform>(this.attach_appointmentforms), new Action<appointmentform>(this.detach_appointmentforms));
			this._notifications = new EntitySet<notification>(new Action<notification>(this.attach_notifications), new Action<notification>(this.detach_notifications));
			this._qa_forums = new EntitySet<qa_forum>(new Action<qa_forum>(this.attach_qa_forums), new Action<qa_forum>(this.detach_qa_forums));
			this._reviews = new EntitySet<review>(new Action<review>(this.attach_reviews), new Action<review>(this.detach_reviews));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int doctor_id
		{
			get
			{
				return this._doctor_id;
			}
			set
			{
				if ((this._doctor_id != value))
				{
					this.Ondoctor_idChanging(value);
					this.SendPropertyChanging();
					this._doctor_id = value;
					this.SendPropertyChanged("doctor_id");
					this.Ondoctor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_full_name", DbType="NVarChar(100)")]
		public string full_name
		{
			get
			{
				return this._full_name;
			}
			set
			{
				if ((this._full_name != value))
				{
					this.Onfull_nameChanging(value);
					this.SendPropertyChanging();
					this._full_name = value;
					this.SendPropertyChanged("full_name");
					this.Onfull_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialization", DbType="NVarChar(100)")]
		public string specialization
		{
			get
			{
				return this._specialization;
			}
			set
			{
				if ((this._specialization != value))
				{
					this.OnspecializationChanging(value);
					this.SendPropertyChanging();
					this._specialization = value;
					this.SendPropertyChanged("specialization");
					this.OnspecializationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fee", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> fee
		{
			get
			{
				return this._fee;
			}
			set
			{
				if ((this._fee != value))
				{
					this.OnfeeChanging(value);
					this.SendPropertyChanging();
					this._fee = value;
					this.SendPropertyChanged("fee");
					this.OnfeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_path", DbType="VarChar(255)")]
		public string image_path
		{
			get
			{
				return this._image_path;
			}
			set
			{
				if ((this._image_path != value))
				{
					this.Onimage_pathChanging(value);
					this.SendPropertyChanging();
					this._image_path = value;
					this.SendPropertyChanged("image_path");
					this.Onimage_pathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(100)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit")]
		public System.Nullable<bool> is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_appointmentform", Storage="_appointmentforms", ThisKey="doctor_id", OtherKey="doctor_id")]
		public EntitySet<appointmentform> appointmentforms
		{
			get
			{
				return this._appointmentforms;
			}
			set
			{
				this._appointmentforms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_notification", Storage="_notifications", ThisKey="doctor_id", OtherKey="doctor_id")]
		public EntitySet<notification> notifications
		{
			get
			{
				return this._notifications;
			}
			set
			{
				this._notifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_qa_forum", Storage="_qa_forums", ThisKey="doctor_id", OtherKey="doctor_id")]
		public EntitySet<qa_forum> qa_forums
		{
			get
			{
				return this._qa_forums;
			}
			set
			{
				this._qa_forums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_review", Storage="_reviews", ThisKey="doctor_id", OtherKey="doctor_id")]
		public EntitySet<review> reviews
		{
			get
			{
				return this._reviews;
			}
			set
			{
				this._reviews.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_appointmentforms(appointmentform entity)
		{
			this.SendPropertyChanging();
			entity.admin = this;
		}
		
		private void detach_appointmentforms(appointmentform entity)
		{
			this.SendPropertyChanging();
			entity.admin = null;
		}
		
		private void attach_notifications(notification entity)
		{
			this.SendPropertyChanging();
			entity.admin = this;
		}
		
		private void detach_notifications(notification entity)
		{
			this.SendPropertyChanging();
			entity.admin = null;
		}
		
		private void attach_qa_forums(qa_forum entity)
		{
			this.SendPropertyChanging();
			entity.admin = this;
		}
		
		private void detach_qa_forums(qa_forum entity)
		{
			this.SendPropertyChanging();
			entity.admin = null;
		}
		
		private void attach_reviews(review entity)
		{
			this.SendPropertyChanging();
			entity.admin = this;
		}
		
		private void detach_reviews(review entity)
		{
			this.SendPropertyChanging();
			entity.admin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.appointmentforms")]
	public partial class appointmentform : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _appointment_id;
		
		private System.Nullable<int> _patient_id;
		
		private System.Nullable<int> _doctor_id;
		
		private System.Nullable<int> _service_id;
		
		private string _reason;
		
		private string _symptom_image;
		
		private string _session_shift;
		
		private System.Nullable<System.DateTime> _appointment_date;
		
		private string _status;
		
		private string _qr_code;
		
		private string _patient_code;
		
		private System.Nullable<System.DateTime> _created_at;
		
		private EntitySet<treatment_result> _treatment_results;
		
		private EntityRef<admin> _admin;
		
		private EntityRef<customer> _customer;
		
		private EntityRef<service> _service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onappointment_idChanging(int value);
    partial void Onappointment_idChanged();
    partial void Onpatient_idChanging(System.Nullable<int> value);
    partial void Onpatient_idChanged();
    partial void Ondoctor_idChanging(System.Nullable<int> value);
    partial void Ondoctor_idChanged();
    partial void Onservice_idChanging(System.Nullable<int> value);
    partial void Onservice_idChanged();
    partial void OnreasonChanging(string value);
    partial void OnreasonChanged();
    partial void Onsymptom_imageChanging(string value);
    partial void Onsymptom_imageChanged();
    partial void Onsession_shiftChanging(string value);
    partial void Onsession_shiftChanged();
    partial void Onappointment_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onappointment_dateChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onqr_codeChanging(string value);
    partial void Onqr_codeChanged();
    partial void Onpatient_codeChanging(string value);
    partial void Onpatient_codeChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    #endregion
		
		public appointmentform()
		{
			this._treatment_results = new EntitySet<treatment_result>(new Action<treatment_result>(this.attach_treatment_results), new Action<treatment_result>(this.detach_treatment_results));
			this._admin = default(EntityRef<admin>);
			this._customer = default(EntityRef<customer>);
			this._service = default(EntityRef<service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appointment_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int appointment_id
		{
			get
			{
				return this._appointment_id;
			}
			set
			{
				if ((this._appointment_id != value))
				{
					this.Onappointment_idChanging(value);
					this.SendPropertyChanging();
					this._appointment_id = value;
					this.SendPropertyChanged("appointment_id");
					this.Onappointment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int")]
		public System.Nullable<int> patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_id", DbType="Int")]
		public System.Nullable<int> doctor_id
		{
			get
			{
				return this._doctor_id;
			}
			set
			{
				if ((this._doctor_id != value))
				{
					if (this._admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondoctor_idChanging(value);
					this.SendPropertyChanging();
					this._doctor_id = value;
					this.SendPropertyChanged("doctor_id");
					this.Ondoctor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_id", DbType="Int")]
		public System.Nullable<int> service_id
		{
			get
			{
				return this._service_id;
			}
			set
			{
				if ((this._service_id != value))
				{
					if (this._service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onservice_idChanging(value);
					this.SendPropertyChanging();
					this._service_id = value;
					this.SendPropertyChanged("service_id");
					this.Onservice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reason", DbType="NVarChar(MAX)")]
		public string reason
		{
			get
			{
				return this._reason;
			}
			set
			{
				if ((this._reason != value))
				{
					this.OnreasonChanging(value);
					this.SendPropertyChanging();
					this._reason = value;
					this.SendPropertyChanged("reason");
					this.OnreasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_symptom_image", DbType="VarChar(255)")]
		public string symptom_image
		{
			get
			{
				return this._symptom_image;
			}
			set
			{
				if ((this._symptom_image != value))
				{
					this.Onsymptom_imageChanging(value);
					this.SendPropertyChanging();
					this._symptom_image = value;
					this.SendPropertyChanged("symptom_image");
					this.Onsymptom_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_shift", DbType="NVarChar(20)")]
		public string session_shift
		{
			get
			{
				return this._session_shift;
			}
			set
			{
				if ((this._session_shift != value))
				{
					this.Onsession_shiftChanging(value);
					this.SendPropertyChanging();
					this._session_shift = value;
					this.SendPropertyChanged("session_shift");
					this.Onsession_shiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appointment_date", DbType="Date")]
		public System.Nullable<System.DateTime> appointment_date
		{
			get
			{
				return this._appointment_date;
			}
			set
			{
				if ((this._appointment_date != value))
				{
					this.Onappointment_dateChanging(value);
					this.SendPropertyChanging();
					this._appointment_date = value;
					this.SendPropertyChanged("appointment_date");
					this.Onappointment_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(20)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qr_code", DbType="VarChar(255)")]
		public string qr_code
		{
			get
			{
				return this._qr_code;
			}
			set
			{
				if ((this._qr_code != value))
				{
					this.Onqr_codeChanging(value);
					this.SendPropertyChanging();
					this._qr_code = value;
					this.SendPropertyChanged("qr_code");
					this.Onqr_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_code", DbType="VarChar(50)")]
		public string patient_code
		{
			get
			{
				return this._patient_code;
			}
			set
			{
				if ((this._patient_code != value))
				{
					this.Onpatient_codeChanging(value);
					this.SendPropertyChanging();
					this._patient_code = value;
					this.SendPropertyChanged("patient_code");
					this.Onpatient_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="appointmentform_treatment_result", Storage="_treatment_results", ThisKey="appointment_id", OtherKey="appointment_id")]
		public EntitySet<treatment_result> treatment_results
		{
			get
			{
				return this._treatment_results;
			}
			set
			{
				this._treatment_results.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_appointmentform", Storage="_admin", ThisKey="doctor_id", OtherKey="doctor_id", IsForeignKey=true)]
		public admin admin
		{
			get
			{
				return this._admin.Entity;
			}
			set
			{
				admin previousValue = this._admin.Entity;
				if (((previousValue != value) 
							|| (this._admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._admin.Entity = null;
						previousValue.appointmentforms.Remove(this);
					}
					this._admin.Entity = value;
					if ((value != null))
					{
						value.appointmentforms.Add(this);
						this._doctor_id = value.doctor_id;
					}
					else
					{
						this._doctor_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_appointmentform", Storage="_customer", ThisKey="patient_id", OtherKey="patient_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.appointmentforms.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.appointmentforms.Add(this);
						this._patient_id = value.patient_id;
					}
					else
					{
						this._patient_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="service_appointmentform", Storage="_service", ThisKey="service_id", OtherKey="service_id", IsForeignKey=true)]
		public service service
		{
			get
			{
				return this._service.Entity;
			}
			set
			{
				service previousValue = this._service.Entity;
				if (((previousValue != value) 
							|| (this._service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._service.Entity = null;
						previousValue.appointmentforms.Remove(this);
					}
					this._service.Entity = value;
					if ((value != null))
					{
						value.appointmentforms.Add(this);
						this._service_id = value.service_id;
					}
					else
					{
						this._service_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_treatment_results(treatment_result entity)
		{
			this.SendPropertyChanging();
			entity.appointmentform = this;
		}
		
		private void detach_treatment_results(treatment_result entity)
		{
			this.SendPropertyChanging();
			entity.appointmentform = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.clinic_branches")]
	public partial class clinic_branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _branch_id;
		
		private string _branch_name;
		
		private string _address;
		
		private string _phone_number;
		
		private string _email;
		
		private string _opening_hours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbranch_idChanging(int value);
    partial void Onbranch_idChanged();
    partial void Onbranch_nameChanging(string value);
    partial void Onbranch_nameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onopening_hoursChanging(string value);
    partial void Onopening_hoursChanged();
    #endregion
		
		public clinic_branch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int branch_id
		{
			get
			{
				return this._branch_id;
			}
			set
			{
				if ((this._branch_id != value))
				{
					this.Onbranch_idChanging(value);
					this.SendPropertyChanging();
					this._branch_id = value;
					this.SendPropertyChanged("branch_id");
					this.Onbranch_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch_name", DbType="NVarChar(100)")]
		public string branch_name
		{
			get
			{
				return this._branch_name;
			}
			set
			{
				if ((this._branch_name != value))
				{
					this.Onbranch_nameChanging(value);
					this.SendPropertyChanging();
					this._branch_name = value;
					this.SendPropertyChanged("branch_name");
					this.Onbranch_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(255)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="VarChar(20)")]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opening_hours", DbType="NVarChar(100)")]
		public string opening_hours
		{
			get
			{
				return this._opening_hours;
			}
			set
			{
				if ((this._opening_hours != value))
				{
					this.Onopening_hoursChanging(value);
					this.SendPropertyChanging();
					this._opening_hours = value;
					this.SendPropertyChanged("opening_hours");
					this.Onopening_hoursChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customers")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _patient_id;
		
		private string _full_name;
		
		private string _gender;
		
		private string _phone;
		
		private string _email;
		
		private System.Nullable<System.DateTime> _dob;
		
		private string _ethnicity;
		
		private string _province;
		
		private string _password;
		
		private System.Nullable<bool> _is_active;
		
		private EntitySet<appointmentform> _appointmentforms;
		
		private EntitySet<notification> _notifications;
		
		private EntitySet<qa_forum> _qa_forums;
		
		private EntitySet<comment> _comments;
		
		private EntitySet<review> _reviews;
		
		private EntitySet<order> _orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpatient_idChanging(int value);
    partial void Onpatient_idChanged();
    partial void Onfull_nameChanging(string value);
    partial void Onfull_nameChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OndobChanging(System.Nullable<System.DateTime> value);
    partial void OndobChanged();
    partial void OnethnicityChanging(string value);
    partial void OnethnicityChanged();
    partial void OnprovinceChanging(string value);
    partial void OnprovinceChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onis_activeChanging(System.Nullable<bool> value);
    partial void Onis_activeChanged();
    #endregion
		
		public customer()
		{
			this._appointmentforms = new EntitySet<appointmentform>(new Action<appointmentform>(this.attach_appointmentforms), new Action<appointmentform>(this.detach_appointmentforms));
			this._notifications = new EntitySet<notification>(new Action<notification>(this.attach_notifications), new Action<notification>(this.detach_notifications));
			this._qa_forums = new EntitySet<qa_forum>(new Action<qa_forum>(this.attach_qa_forums), new Action<qa_forum>(this.detach_qa_forums));
			this._comments = new EntitySet<comment>(new Action<comment>(this.attach_comments), new Action<comment>(this.detach_comments));
			this._reviews = new EntitySet<review>(new Action<review>(this.attach_reviews), new Action<review>(this.detach_reviews));
			this._orders = new EntitySet<order>(new Action<order>(this.attach_orders), new Action<order>(this.detach_orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_full_name", DbType="NVarChar(100)")]
		public string full_name
		{
			get
			{
				return this._full_name;
			}
			set
			{
				if ((this._full_name != value))
				{
					this.Onfull_nameChanging(value);
					this.SendPropertyChanging();
					this._full_name = value;
					this.SendPropertyChanged("full_name");
					this.Onfull_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="NVarChar(10)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(20)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="Date")]
		public System.Nullable<System.DateTime> dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ethnicity", DbType="NVarChar(50)")]
		public string ethnicity
		{
			get
			{
				return this._ethnicity;
			}
			set
			{
				if ((this._ethnicity != value))
				{
					this.OnethnicityChanging(value);
					this.SendPropertyChanging();
					this._ethnicity = value;
					this.SendPropertyChanged("ethnicity");
					this.OnethnicityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province", DbType="NVarChar(100)")]
		public string province
		{
			get
			{
				return this._province;
			}
			set
			{
				if ((this._province != value))
				{
					this.OnprovinceChanging(value);
					this.SendPropertyChanging();
					this._province = value;
					this.SendPropertyChanged("province");
					this.OnprovinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit")]
		public System.Nullable<bool> is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_appointmentform", Storage="_appointmentforms", ThisKey="patient_id", OtherKey="patient_id")]
		public EntitySet<appointmentform> appointmentforms
		{
			get
			{
				return this._appointmentforms;
			}
			set
			{
				this._appointmentforms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_notification", Storage="_notifications", ThisKey="patient_id", OtherKey="patient_id")]
		public EntitySet<notification> notifications
		{
			get
			{
				return this._notifications;
			}
			set
			{
				this._notifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_qa_forum", Storage="_qa_forums", ThisKey="patient_id", OtherKey="patient_id")]
		public EntitySet<qa_forum> qa_forums
		{
			get
			{
				return this._qa_forums;
			}
			set
			{
				this._qa_forums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_comment", Storage="_comments", ThisKey="patient_id", OtherKey="patient_id")]
		public EntitySet<comment> comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				this._comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_review", Storage="_reviews", ThisKey="patient_id", OtherKey="patient_id")]
		public EntitySet<review> reviews
		{
			get
			{
				return this._reviews;
			}
			set
			{
				this._reviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_order", Storage="_orders", ThisKey="patient_id", OtherKey="patient_id")]
		public EntitySet<order> orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				this._orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_appointmentforms(appointmentform entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_appointmentforms(appointmentform entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_notifications(notification entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_notifications(notification entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_qa_forums(qa_forum entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_qa_forums(qa_forum entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_comments(comment entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_comments(comment entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_reviews(review entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_reviews(review entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chat")]
	public partial class chat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _chat_id;
		
		private System.Nullable<int> _sender_id;
		
		private System.Nullable<int> _receiver_id;
		
		private string _sender_role;
		
		private string _receiver_role;
		
		private string _message_text;
		
		private System.Nullable<System.DateTime> _sent_at;
		
		private System.Nullable<bool> _is_read;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onchat_idChanging(int value);
    partial void Onchat_idChanged();
    partial void Onsender_idChanging(System.Nullable<int> value);
    partial void Onsender_idChanged();
    partial void Onreceiver_idChanging(System.Nullable<int> value);
    partial void Onreceiver_idChanged();
    partial void Onsender_roleChanging(string value);
    partial void Onsender_roleChanged();
    partial void Onreceiver_roleChanging(string value);
    partial void Onreceiver_roleChanged();
    partial void Onmessage_textChanging(string value);
    partial void Onmessage_textChanged();
    partial void Onsent_atChanging(System.Nullable<System.DateTime> value);
    partial void Onsent_atChanged();
    partial void Onis_readChanging(System.Nullable<bool> value);
    partial void Onis_readChanged();
    #endregion
		
		public chat()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chat_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int chat_id
		{
			get
			{
				return this._chat_id;
			}
			set
			{
				if ((this._chat_id != value))
				{
					this.Onchat_idChanging(value);
					this.SendPropertyChanging();
					this._chat_id = value;
					this.SendPropertyChanged("chat_id");
					this.Onchat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sender_id", DbType="Int")]
		public System.Nullable<int> sender_id
		{
			get
			{
				return this._sender_id;
			}
			set
			{
				if ((this._sender_id != value))
				{
					this.Onsender_idChanging(value);
					this.SendPropertyChanging();
					this._sender_id = value;
					this.SendPropertyChanged("sender_id");
					this.Onsender_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiver_id", DbType="Int")]
		public System.Nullable<int> receiver_id
		{
			get
			{
				return this._receiver_id;
			}
			set
			{
				if ((this._receiver_id != value))
				{
					this.Onreceiver_idChanging(value);
					this.SendPropertyChanging();
					this._receiver_id = value;
					this.SendPropertyChanged("receiver_id");
					this.Onreceiver_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sender_role", DbType="NVarChar(20)")]
		public string sender_role
		{
			get
			{
				return this._sender_role;
			}
			set
			{
				if ((this._sender_role != value))
				{
					this.Onsender_roleChanging(value);
					this.SendPropertyChanging();
					this._sender_role = value;
					this.SendPropertyChanged("sender_role");
					this.Onsender_roleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiver_role", DbType="NVarChar(20)")]
		public string receiver_role
		{
			get
			{
				return this._receiver_role;
			}
			set
			{
				if ((this._receiver_role != value))
				{
					this.Onreceiver_roleChanging(value);
					this.SendPropertyChanging();
					this._receiver_role = value;
					this.SendPropertyChanged("receiver_role");
					this.Onreceiver_roleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message_text", DbType="NVarChar(MAX)")]
		public string message_text
		{
			get
			{
				return this._message_text;
			}
			set
			{
				if ((this._message_text != value))
				{
					this.Onmessage_textChanging(value);
					this.SendPropertyChanging();
					this._message_text = value;
					this.SendPropertyChanged("message_text");
					this.Onmessage_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sent_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> sent_at
		{
			get
			{
				return this._sent_at;
			}
			set
			{
				if ((this._sent_at != value))
				{
					this.Onsent_atChanging(value);
					this.SendPropertyChanging();
					this._sent_at = value;
					this.SendPropertyChanged("sent_at");
					this.Onsent_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_read", DbType="Bit")]
		public System.Nullable<bool> is_read
		{
			get
			{
				return this._is_read;
			}
			set
			{
				if ((this._is_read != value))
				{
					this.Onis_readChanging(value);
					this.SendPropertyChanging();
					this._is_read = value;
					this.SendPropertyChanged("is_read");
					this.Onis_readChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.notifications")]
	public partial class notification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _notification_id;
		
		private System.Nullable<int> _patient_id;
		
		private System.Nullable<int> _doctor_id;
		
		private string _message;
		
		private System.Nullable<System.DateTime> _sent_at;
		
		private string _status;
		
		private EntityRef<admin> _admin;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnotification_idChanging(int value);
    partial void Onnotification_idChanged();
    partial void Onpatient_idChanging(System.Nullable<int> value);
    partial void Onpatient_idChanged();
    partial void Ondoctor_idChanging(System.Nullable<int> value);
    partial void Ondoctor_idChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void Onsent_atChanging(System.Nullable<System.DateTime> value);
    partial void Onsent_atChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public notification()
		{
			this._admin = default(EntityRef<admin>);
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notification_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int notification_id
		{
			get
			{
				return this._notification_id;
			}
			set
			{
				if ((this._notification_id != value))
				{
					this.Onnotification_idChanging(value);
					this.SendPropertyChanging();
					this._notification_id = value;
					this.SendPropertyChanged("notification_id");
					this.Onnotification_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int")]
		public System.Nullable<int> patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_id", DbType="Int")]
		public System.Nullable<int> doctor_id
		{
			get
			{
				return this._doctor_id;
			}
			set
			{
				if ((this._doctor_id != value))
				{
					if (this._admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondoctor_idChanging(value);
					this.SendPropertyChanging();
					this._doctor_id = value;
					this.SendPropertyChanged("doctor_id");
					this.Ondoctor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="NVarChar(500)")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sent_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> sent_at
		{
			get
			{
				return this._sent_at;
			}
			set
			{
				if ((this._sent_at != value))
				{
					this.Onsent_atChanging(value);
					this.SendPropertyChanging();
					this._sent_at = value;
					this.SendPropertyChanged("sent_at");
					this.Onsent_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(20)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_notification", Storage="_admin", ThisKey="doctor_id", OtherKey="doctor_id", IsForeignKey=true)]
		public admin admin
		{
			get
			{
				return this._admin.Entity;
			}
			set
			{
				admin previousValue = this._admin.Entity;
				if (((previousValue != value) 
							|| (this._admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._admin.Entity = null;
						previousValue.notifications.Remove(this);
					}
					this._admin.Entity = value;
					if ((value != null))
					{
						value.notifications.Add(this);
						this._doctor_id = value.doctor_id;
					}
					else
					{
						this._doctor_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_notification", Storage="_customer", ThisKey="patient_id", OtherKey="patient_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.notifications.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.notifications.Add(this);
						this._patient_id = value.patient_id;
					}
					else
					{
						this._patient_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.qa_forum")]
	public partial class qa_forum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _qa_id;
		
		private string _question;
		
		private string _answer;
		
		private System.Nullable<int> _patient_id;
		
		private System.Nullable<int> _doctor_id;
		
		private string _status;
		
		private System.Nullable<System.DateTime> _created_at;
		
		private EntityRef<admin> _admin;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onqa_idChanging(int value);
    partial void Onqa_idChanged();
    partial void OnquestionChanging(string value);
    partial void OnquestionChanged();
    partial void OnanswerChanging(string value);
    partial void OnanswerChanged();
    partial void Onpatient_idChanging(System.Nullable<int> value);
    partial void Onpatient_idChanged();
    partial void Ondoctor_idChanging(System.Nullable<int> value);
    partial void Ondoctor_idChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    #endregion
		
		public qa_forum()
		{
			this._admin = default(EntityRef<admin>);
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qa_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int qa_id
		{
			get
			{
				return this._qa_id;
			}
			set
			{
				if ((this._qa_id != value))
				{
					this.Onqa_idChanging(value);
					this.SendPropertyChanging();
					this._qa_id = value;
					this.SendPropertyChanged("qa_id");
					this.Onqa_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question", DbType="NVarChar(MAX)")]
		public string question
		{
			get
			{
				return this._question;
			}
			set
			{
				if ((this._question != value))
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer", DbType="NVarChar(MAX)")]
		public string answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if ((this._answer != value))
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int")]
		public System.Nullable<int> patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_id", DbType="Int")]
		public System.Nullable<int> doctor_id
		{
			get
			{
				return this._doctor_id;
			}
			set
			{
				if ((this._doctor_id != value))
				{
					if (this._admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondoctor_idChanging(value);
					this.SendPropertyChanging();
					this._doctor_id = value;
					this.SendPropertyChanged("doctor_id");
					this.Ondoctor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(20)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_qa_forum", Storage="_admin", ThisKey="doctor_id", OtherKey="doctor_id", IsForeignKey=true)]
		public admin admin
		{
			get
			{
				return this._admin.Entity;
			}
			set
			{
				admin previousValue = this._admin.Entity;
				if (((previousValue != value) 
							|| (this._admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._admin.Entity = null;
						previousValue.qa_forums.Remove(this);
					}
					this._admin.Entity = value;
					if ((value != null))
					{
						value.qa_forums.Add(this);
						this._doctor_id = value.doctor_id;
					}
					else
					{
						this._doctor_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_qa_forum", Storage="_customer", ThisKey="patient_id", OtherKey="patient_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.qa_forums.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.qa_forums.Add(this);
						this._patient_id = value.patient_id;
					}
					else
					{
						this._patient_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.services")]
	public partial class service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _service_id;
		
		private string _service_name;
		
		private System.Nullable<decimal> _price;
		
		private string _description;
		
		private string _image_path;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private EntitySet<appointmentform> _appointmentforms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onservice_idChanging(int value);
    partial void Onservice_idChanged();
    partial void Onservice_nameChanging(string value);
    partial void Onservice_nameChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onimage_pathChanging(string value);
    partial void Onimage_pathChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    #endregion
		
		public service()
		{
			this._appointmentforms = new EntitySet<appointmentform>(new Action<appointmentform>(this.attach_appointmentforms), new Action<appointmentform>(this.detach_appointmentforms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int service_id
		{
			get
			{
				return this._service_id;
			}
			set
			{
				if ((this._service_id != value))
				{
					this.Onservice_idChanging(value);
					this.SendPropertyChanging();
					this._service_id = value;
					this.SendPropertyChanged("service_id");
					this.Onservice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_name", DbType="NVarChar(100)")]
		public string service_name
		{
			get
			{
				return this._service_name;
			}
			set
			{
				if ((this._service_name != value))
				{
					this.Onservice_nameChanging(value);
					this.SendPropertyChanging();
					this._service_name = value;
					this.SendPropertyChanged("service_name");
					this.Onservice_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_path", DbType="VarChar(255)")]
		public string image_path
		{
			get
			{
				return this._image_path;
			}
			set
			{
				if ((this._image_path != value))
				{
					this.Onimage_pathChanging(value);
					this.SendPropertyChanging();
					this._image_path = value;
					this.SendPropertyChanged("image_path");
					this.Onimage_pathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="service_appointmentform", Storage="_appointmentforms", ThisKey="service_id", OtherKey="service_id")]
		public EntitySet<appointmentform> appointmentforms
		{
			get
			{
				return this._appointmentforms;
			}
			set
			{
				this._appointmentforms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_appointmentforms(appointmentform entity)
		{
			this.SendPropertyChanging();
			entity.service = this;
		}
		
		private void detach_appointmentforms(appointmentform entity)
		{
			this.SendPropertyChanging();
			entity.service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.treatment_results")]
	public partial class treatment_result : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _result_id;
		
		private System.Nullable<int> _appointment_id;
		
		private string _treatment_code;
		
		private string _result_details;
		
		private System.Nullable<System.DateTime> _created_at;
		
		private EntityRef<appointmentform> _appointmentform;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onresult_idChanging(int value);
    partial void Onresult_idChanged();
    partial void Onappointment_idChanging(System.Nullable<int> value);
    partial void Onappointment_idChanged();
    partial void Ontreatment_codeChanging(string value);
    partial void Ontreatment_codeChanged();
    partial void Onresult_detailsChanging(string value);
    partial void Onresult_detailsChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    #endregion
		
		public treatment_result()
		{
			this._appointmentform = default(EntityRef<appointmentform>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int result_id
		{
			get
			{
				return this._result_id;
			}
			set
			{
				if ((this._result_id != value))
				{
					this.Onresult_idChanging(value);
					this.SendPropertyChanging();
					this._result_id = value;
					this.SendPropertyChanged("result_id");
					this.Onresult_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appointment_id", DbType="Int")]
		public System.Nullable<int> appointment_id
		{
			get
			{
				return this._appointment_id;
			}
			set
			{
				if ((this._appointment_id != value))
				{
					if (this._appointmentform.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onappointment_idChanging(value);
					this.SendPropertyChanging();
					this._appointment_id = value;
					this.SendPropertyChanged("appointment_id");
					this.Onappointment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_treatment_code", DbType="VarChar(50)")]
		public string treatment_code
		{
			get
			{
				return this._treatment_code;
			}
			set
			{
				if ((this._treatment_code != value))
				{
					this.Ontreatment_codeChanging(value);
					this.SendPropertyChanging();
					this._treatment_code = value;
					this.SendPropertyChanged("treatment_code");
					this.Ontreatment_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result_details", DbType="NVarChar(MAX)")]
		public string result_details
		{
			get
			{
				return this._result_details;
			}
			set
			{
				if ((this._result_details != value))
				{
					this.Onresult_detailsChanging(value);
					this.SendPropertyChanging();
					this._result_details = value;
					this.SendPropertyChanged("result_details");
					this.Onresult_detailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="appointmentform_treatment_result", Storage="_appointmentform", ThisKey="appointment_id", OtherKey="appointment_id", IsForeignKey=true)]
		public appointmentform appointmentform
		{
			get
			{
				return this._appointmentform.Entity;
			}
			set
			{
				appointmentform previousValue = this._appointmentform.Entity;
				if (((previousValue != value) 
							|| (this._appointmentform.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._appointmentform.Entity = null;
						previousValue.treatment_results.Remove(this);
					}
					this._appointmentform.Entity = value;
					if ((value != null))
					{
						value.treatment_results.Add(this);
						this._appointment_id = value.appointment_id;
					}
					else
					{
						this._appointment_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("appointmentform");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.comments")]
	public partial class comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _comment_id;
		
		private int _review_id;
		
		private int _patient_id;
		
		private string _comment_text;
		
		private System.Nullable<System.DateTime> _created_at;
		
		private EntityRef<customer> _customer;
		
		private EntityRef<review> _review;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncomment_idChanging(int value);
    partial void Oncomment_idChanged();
    partial void Onreview_idChanging(int value);
    partial void Onreview_idChanged();
    partial void Onpatient_idChanging(int value);
    partial void Onpatient_idChanged();
    partial void Oncomment_textChanging(string value);
    partial void Oncomment_textChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    #endregion
		
		public comment()
		{
			this._customer = default(EntityRef<customer>);
			this._review = default(EntityRef<review>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int comment_id
		{
			get
			{
				return this._comment_id;
			}
			set
			{
				if ((this._comment_id != value))
				{
					this.Oncomment_idChanging(value);
					this.SendPropertyChanging();
					this._comment_id = value;
					this.SendPropertyChanged("comment_id");
					this.Oncomment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review_id", DbType="Int NOT NULL")]
		public int review_id
		{
			get
			{
				return this._review_id;
			}
			set
			{
				if ((this._review_id != value))
				{
					if (this._review.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onreview_idChanging(value);
					this.SendPropertyChanging();
					this._review_id = value;
					this.SendPropertyChanged("review_id");
					this.Onreview_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int NOT NULL")]
		public int patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string comment_text
		{
			get
			{
				return this._comment_text;
			}
			set
			{
				if ((this._comment_text != value))
				{
					this.Oncomment_textChanging(value);
					this.SendPropertyChanging();
					this._comment_text = value;
					this.SendPropertyChanged("comment_text");
					this.Oncomment_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_comment", Storage="_customer", ThisKey="patient_id", OtherKey="patient_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.comments.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.comments.Add(this);
						this._patient_id = value.patient_id;
					}
					else
					{
						this._patient_id = default(int);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="review_comment", Storage="_review", ThisKey="review_id", OtherKey="review_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public review review
		{
			get
			{
				return this._review.Entity;
			}
			set
			{
				review previousValue = this._review.Entity;
				if (((previousValue != value) 
							|| (this._review.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._review.Entity = null;
						previousValue.comments.Remove(this);
					}
					this._review.Entity = value;
					if ((value != null))
					{
						value.comments.Add(this);
						this._review_id = value.review_id;
					}
					else
					{
						this._review_id = default(int);
					}
					this.SendPropertyChanged("review");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.reviews")]
	public partial class review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _review_id;
		
		private System.Nullable<int> _patient_id;
		
		private System.Nullable<int> _doctor_id;
		
		private System.Nullable<int> _rating;
		
		private string _comment;
		
		private System.Nullable<System.DateTime> _created_at;
		
		private string _title;
		
		private EntitySet<comment> _comments;
		
		private EntityRef<admin> _admin;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreview_idChanging(int value);
    partial void Onreview_idChanged();
    partial void Onpatient_idChanging(System.Nullable<int> value);
    partial void Onpatient_idChanged();
    partial void Ondoctor_idChanging(System.Nullable<int> value);
    partial void Ondoctor_idChanged();
    partial void OnratingChanging(System.Nullable<int> value);
    partial void OnratingChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    #endregion
		
		public review()
		{
			this._comments = new EntitySet<comment>(new Action<comment>(this.attach_comments), new Action<comment>(this.detach_comments));
			this._admin = default(EntityRef<admin>);
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int review_id
		{
			get
			{
				return this._review_id;
			}
			set
			{
				if ((this._review_id != value))
				{
					this.Onreview_idChanging(value);
					this.SendPropertyChanging();
					this._review_id = value;
					this.SendPropertyChanged("review_id");
					this.Onreview_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int")]
		public System.Nullable<int> patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_id", DbType="Int")]
		public System.Nullable<int> doctor_id
		{
			get
			{
				return this._doctor_id;
			}
			set
			{
				if ((this._doctor_id != value))
				{
					if (this._admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondoctor_idChanging(value);
					this.SendPropertyChanging();
					this._doctor_id = value;
					this.SendPropertyChanged("doctor_id");
					this.Ondoctor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating", DbType="Int")]
		public System.Nullable<int> rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if ((this._rating != value))
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(1000)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(255)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="review_comment", Storage="_comments", ThisKey="review_id", OtherKey="review_id")]
		public EntitySet<comment> comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				this._comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_review", Storage="_admin", ThisKey="doctor_id", OtherKey="doctor_id", IsForeignKey=true)]
		public admin admin
		{
			get
			{
				return this._admin.Entity;
			}
			set
			{
				admin previousValue = this._admin.Entity;
				if (((previousValue != value) 
							|| (this._admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._admin.Entity = null;
						previousValue.reviews.Remove(this);
					}
					this._admin.Entity = value;
					if ((value != null))
					{
						value.reviews.Add(this);
						this._doctor_id = value.doctor_id;
					}
					else
					{
						this._doctor_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_review", Storage="_customer", ThisKey="patient_id", OtherKey="patient_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.reviews.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.reviews.Add(this);
						this._patient_id = value.patient_id;
					}
					else
					{
						this._patient_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_comments(comment entity)
		{
			this.SendPropertyChanging();
			entity.review = this;
		}
		
		private void detach_comments(comment entity)
		{
			this.SendPropertyChanging();
			entity.review = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.payment")]
	public partial class payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _payment_id;
		
		private System.Nullable<int> _order_id;
		
		private System.Nullable<System.DateTime> _payment_date;
		
		private string _payment_method;
		
		private System.Nullable<decimal> _amount;
		
		private string _payment_status;
		
		private string _transaction_id;
		
		private System.Nullable<bool> _is_verified;
		
		private System.Nullable<System.DateTime> _created_at;
		
		private EntityRef<order> _order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpayment_idChanging(int value);
    partial void Onpayment_idChanged();
    partial void Onorder_idChanging(System.Nullable<int> value);
    partial void Onorder_idChanged();
    partial void Onpayment_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onpayment_dateChanged();
    partial void Onpayment_methodChanging(string value);
    partial void Onpayment_methodChanged();
    partial void OnamountChanging(System.Nullable<decimal> value);
    partial void OnamountChanged();
    partial void Onpayment_statusChanging(string value);
    partial void Onpayment_statusChanged();
    partial void Ontransaction_idChanging(string value);
    partial void Ontransaction_idChanged();
    partial void Onis_verifiedChanging(System.Nullable<bool> value);
    partial void Onis_verifiedChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    #endregion
		
		public payment()
		{
			this._order = default(EntityRef<order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int payment_id
		{
			get
			{
				return this._payment_id;
			}
			set
			{
				if ((this._payment_id != value))
				{
					this.Onpayment_idChanging(value);
					this.SendPropertyChanging();
					this._payment_id = value;
					this.SendPropertyChanged("payment_id");
					this.Onpayment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int")]
		public System.Nullable<int> order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> payment_date
		{
			get
			{
				return this._payment_date;
			}
			set
			{
				if ((this._payment_date != value))
				{
					this.Onpayment_dateChanging(value);
					this.SendPropertyChanging();
					this._payment_date = value;
					this.SendPropertyChanged("payment_date");
					this.Onpayment_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_method", DbType="NVarChar(50)")]
		public string payment_method
		{
			get
			{
				return this._payment_method;
			}
			set
			{
				if ((this._payment_method != value))
				{
					this.Onpayment_methodChanging(value);
					this.SendPropertyChanging();
					this._payment_method = value;
					this.SendPropertyChanged("payment_method");
					this.Onpayment_methodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_status", DbType="NVarChar(20)")]
		public string payment_status
		{
			get
			{
				return this._payment_status;
			}
			set
			{
				if ((this._payment_status != value))
				{
					this.Onpayment_statusChanging(value);
					this.SendPropertyChanging();
					this._payment_status = value;
					this.SendPropertyChanged("payment_status");
					this.Onpayment_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_id", DbType="VarChar(100)")]
		public string transaction_id
		{
			get
			{
				return this._transaction_id;
			}
			set
			{
				if ((this._transaction_id != value))
				{
					this.Ontransaction_idChanging(value);
					this.SendPropertyChanging();
					this._transaction_id = value;
					this.SendPropertyChanged("transaction_id");
					this.Ontransaction_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_verified", DbType="Bit")]
		public System.Nullable<bool> is_verified
		{
			get
			{
				return this._is_verified;
			}
			set
			{
				if ((this._is_verified != value))
				{
					this.Onis_verifiedChanging(value);
					this.SendPropertyChanging();
					this._is_verified = value;
					this.SendPropertyChanged("is_verified");
					this.Onis_verifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_payment", Storage="_order", ThisKey="order_id", OtherKey="order_id", IsForeignKey=true)]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.payments.Remove(this);
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.payments.Add(this);
						this._order_id = value.order_id;
					}
					else
					{
						this._order_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orders")]
	public partial class order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _order_id;
		
		private System.Nullable<System.DateTime> _order_date;
		
		private System.Nullable<int> _patient_id;
		
		private System.Nullable<bool> _is_paid;
		
		private System.Nullable<bool> _is_done;
		
		private System.Nullable<bool> _is_shipped;
		
		private System.Nullable<System.DateTime> _training_date;
		
		private System.Nullable<decimal> _total_amount;
		
		private EntitySet<payment> _payments;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void Onorder_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onorder_dateChanged();
    partial void Onpatient_idChanging(System.Nullable<int> value);
    partial void Onpatient_idChanged();
    partial void Onis_paidChanging(System.Nullable<bool> value);
    partial void Onis_paidChanged();
    partial void Onis_doneChanging(System.Nullable<bool> value);
    partial void Onis_doneChanged();
    partial void Onis_shippedChanging(System.Nullable<bool> value);
    partial void Onis_shippedChanged();
    partial void Ontraining_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ontraining_dateChanged();
    partial void Ontotal_amountChanging(System.Nullable<decimal> value);
    partial void Ontotal_amountChanged();
    #endregion
		
		public order()
		{
			this._payments = new EntitySet<payment>(new Action<payment>(this.attach_payments), new Action<payment>(this.detach_payments));
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> order_date
		{
			get
			{
				return this._order_date;
			}
			set
			{
				if ((this._order_date != value))
				{
					this.Onorder_dateChanging(value);
					this.SendPropertyChanging();
					this._order_date = value;
					this.SendPropertyChanged("order_date");
					this.Onorder_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int")]
		public System.Nullable<int> patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_paid", DbType="Bit")]
		public System.Nullable<bool> is_paid
		{
			get
			{
				return this._is_paid;
			}
			set
			{
				if ((this._is_paid != value))
				{
					this.Onis_paidChanging(value);
					this.SendPropertyChanging();
					this._is_paid = value;
					this.SendPropertyChanged("is_paid");
					this.Onis_paidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_done", DbType="Bit")]
		public System.Nullable<bool> is_done
		{
			get
			{
				return this._is_done;
			}
			set
			{
				if ((this._is_done != value))
				{
					this.Onis_doneChanging(value);
					this.SendPropertyChanging();
					this._is_done = value;
					this.SendPropertyChanged("is_done");
					this.Onis_doneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_shipped", DbType="Bit")]
		public System.Nullable<bool> is_shipped
		{
			get
			{
				return this._is_shipped;
			}
			set
			{
				if ((this._is_shipped != value))
				{
					this.Onis_shippedChanging(value);
					this.SendPropertyChanging();
					this._is_shipped = value;
					this.SendPropertyChanged("is_shipped");
					this.Onis_shippedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_training_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> training_date
		{
			get
			{
				return this._training_date;
			}
			set
			{
				if ((this._training_date != value))
				{
					this.Ontraining_dateChanging(value);
					this.SendPropertyChanging();
					this._training_date = value;
					this.SendPropertyChanged("training_date");
					this.Ontraining_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> total_amount
		{
			get
			{
				return this._total_amount;
			}
			set
			{
				if ((this._total_amount != value))
				{
					this.Ontotal_amountChanging(value);
					this.SendPropertyChanging();
					this._total_amount = value;
					this.SendPropertyChanged("total_amount");
					this.Ontotal_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_payment", Storage="_payments", ThisKey="order_id", OtherKey="order_id")]
		public EntitySet<payment> payments
		{
			get
			{
				return this._payments;
			}
			set
			{
				this._payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_order", Storage="_customer", ThisKey="patient_id", OtherKey="patient_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.orders.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.orders.Add(this);
						this._patient_id = value.patient_id;
					}
					else
					{
						this._patient_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_payments(payment entity)
		{
			this.SendPropertyChanging();
			entity.order = this;
		}
		
		private void detach_payments(payment entity)
		{
			this.SendPropertyChanging();
			entity.order = null;
		}
	}
}
#pragma warning restore 1591
